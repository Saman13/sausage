stages:
  - build
  - test
  - notify
  - release

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

build-frontend-job:  
  stage: build  
  only:
    changes:
      - frontend/**/*
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT -Dsonar.sources=. -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONAR_LOGIN
  needs:
    - build-frontend-job

telegram-notification-frontend:
  stage: notify
  only:
    changes:
      - frontend/**/*
    variables:
      - $CI_COMMIT_MESSAGE =~ /send notification/ 

  script:
    - >
      curl -X POST -H "Content-type: application/json"
      --data "{\"chat_id\": \"-1002138916913\", \"text\": \"Андрей Федотов собрал frontend и тесты успешно завершены. $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-frontend-job\"}"
      https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage
  needs:
      - sonarqube-frontend-sast

upload-frontend-release:
  stage: release
  only:
    changes:
    - frontend/**/*
  needs:
    - build-frontend-job
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz 
      ${NEXUS_REPO_URL}/${NEXUS_REPO_FRONTEND_NAME}/${VERSION}/sausage-store-${VERSION}.tar.gz



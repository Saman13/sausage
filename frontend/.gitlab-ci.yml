cache:
  paths:
    - frontend/dist/frontend

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
   - build
   - test
   - notify
   - release
   - deploy

build:
   stage: build
   script:
     - cd frontend
     - npm install
     - npm run build
   only:
     changes:
     - frontend/**/*

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT -Dsonar.sources=. -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONAR_LOGIN
  needs:
    - build-frontend-job

telegram-notification-frontend:
  stage: notify
  only:
    changes:
      - frontend/**/*
    variables:
      - $CI_COMMIT_MESSAGE =~ /send notification/

  script:
    - >
      curl -X POST -H "Content-type: application/json"
      --data "{\"chat_id\": \"-1002138916913\", \"text\": \"Андрей Федотов собрал frontend и тесты успешно завершены. $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-frontend-job\"}"
      https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage
  needs:
      - sonarqube-frontend-sast

release:
  stage: release
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz
      ${NEXUS_REPO_URL}/repository/${NEXUS_REPO_FRONTEND_NAME}/${VERSION}/sausage-store-${VERSION}.tar.gz
  only:
    changes:
    - frontend/**/*

deploy:
  stage: deploy
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    #выполняем простую команду для проверки
    - ssh ${DEV_USER}@${DEV_HOST} "id"
    #запуск скрипта
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}"; export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}"; export "NEXUS_REPO_FRONTEND_NAME=${NEXUS_REPO_FRONTEND_NAME}"; setsid /bin/bash -s " < ./frontend/deploy.sh
  environment:
    name: frontend
    url: http://std-030-13.praktikum-services.tech/
  rules:
    - changes:
        - frontend/**/*